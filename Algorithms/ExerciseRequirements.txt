1.A zero-indexed array A consisting of N different integers is given. The array contains integers in the range [1..(N + 1)], which means that exactly one element is missing.
Your goal is to find that missing element. Write a function:

int solution(int A[], int N);
that, given a zero-indexed array A, returns the value of the missing element.

For example, given array A such that: N=4  [1, 5]
  A[0] = 2
  A[1] = 3  
  A[2] = 1  
  A[3] = 5 
the function should return 4, as it is the missing element.

Assume that:
·    N is an integer within the range [0..100,000];
·    the elements of A are all distinct;
·    each element of array A is an integer within the range [1..(N + 1)].
Elements of input arrays can be modified.

TIP:
3 methods:
1.	Sort using bubble sort; iterate and identify the gap
2.	Frequency array
3.	Calculate sum of first n+1 consecutive numbers

 
2.A zero-indexed array A consisting of N integers is given. The dominator of array A is the value that occurs in more than half of the elements of A.
For example, consider array A such that
A[0] = 3    A[1] = 4    A[2] =  3
A[3] = 2    A[4] = 3    A[5] = -1
A[6] = 3    A[7] = 3
The dominator of A is 3 because it occurs in 5 out of 8 elements of A (namely in those with indices 0, 2, 4, 6 and 7) and 5 is more than a half of 8.

Write a function
int solution(int A[], int N);
that, given a zero-indexed array A consisting of N integers, returns index of any element of array A in which the dominator of A occurs. The function should return −1 if array A does not have a dominator.

Assume that:
·    N is an integer within the range [0..100,000];
·    each element of array A is an integer within the range [−2,147,483,648..2,147,483,647].

For example, given array A such that
A[0] = 3    A[1] = 4    A[2] =  3
A[3] = 2    A[4] = 3    A[5] = -1
A[6] = 3    A[7] = 3
the function may return 0, 2, 4, 6 or 7, as explained above.
